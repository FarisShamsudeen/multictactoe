*,
*::after,
*::before {
    box-sizing: border-box;
}

:root {
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size)* .9);
}

body {
    margin: 0;
    background-color: black;
}

.board {
    width: 100vw;
    height: 100vh;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3, auto);
}

.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    /* background-color: rgb(255, 255, 255); */
    background-color: rgb(0, 0, 0);
    /* border: 1px solid rgb(0, 0, 0); */
    border: 1px solid rgb(255, 255, 255);
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
    border-top: none;
}

.cell:nth-child(3n+1) {
    border-left: none;
}

.cell:nth-child(3n+3) {
    border-right: none;
}

.cell:last-child,
.cell:nth-child(7),
.cell:nth-child(8) {
    border-bottom: none;
}

.cell.x::before,
.cell.x::after {
    background-color: rgb(255, 0, 0);
}

.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after {
    background-color: rgb(56, 0, 0);
    filter: drop-shadow(0 0 3px rgb(56, 0, 0)) drop-shadow(0 0 3px rgb(56, 0, 0)) drop-shadow(0 0 3px rgb(56, 0, 0));
}

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after {
    position: absolute;
    content: '';
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
    border-radius: 25px;
}

.cell.x::before,
.board.x .cell:not(.x):not(.o):hover::before {
    transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::after {
    transform: rotate(-45deg);
}

.cell.o::before{
    background-color: rgb(17, 0, 255);
}

/* .cell.o::after{
} */

/* .board.o .cell:not(.x):not(.o):hover::before,
.board.o .cell:not(.x):not(.o):hover::after {
    background-color: rgb(56, 0, 0);
    filter: drop-shadow(0 0 3px rgb(241, 0, 0)) inset 0 0 5px rgb(19, 0, 0);
} */

.cell.o::before,
.cell.o::after,
.board.o .cell:not(.x):not(.o):hover::before,
.board.o .cell:not(.x):not(.o):hover::after {
    content: '';
    position: absolute;
    border-radius: 50%;
}

.cell.o::before {
    background-color: rgb(17, 0, 255);
    width: calc(var(--mark-size)*.85);
    height: calc(var(--mark-size)*.85);
}

.board.o .cell:not(.x):not(.o):hover::before {
    background-color: rgb(2, 0, 32);
    width: calc(var(--mark-size)*.85);
    height: calc(var(--mark-size)*.85);
    filter: drop-shadow(0 0 3px rgb(2, 0, 32)) drop-shadow(0 0 5px rgb(2, 0, 32));
}

.cell.o::after {
    width: calc(var(--mark-size) * .6);
    height: calc(var(--mark-size) * .6);
    background-color: rgb(0, 0, 0);
}

.board.o .cell:not(.x):not(.o):hover::after {
    width: calc(var(--mark-size) * .6);
    height: calc(var(--mark-size) * .6);
    background: radial-gradient(circle closest-corner at 50% 50%, rgb(0, 0, 0) 5%, rgb(2, 0, 32) 100%);
}

.cell.x,
.cell.o {
    cursor: not-allowed;
}

.winning-message {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0,0,0, .8);
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column;
}

.winning-message button {
    font-size: 3rem;
    border-radius: 50px;
    background-color: yellow;
    border: solid 5px black;
    padding: .25em .5em;
    cursor: pointer;
    transition: 200ms ease-in-out;
    
}
.winning-message button:hover {
    background-color: rgb(0, 0, 0);
    color: yellow;
    text-shadow: 0 0 10px yellow;
    
}

.winning-message.show {
    display: flex;
}